name: rocketchat-server-development
title: Rocket.Chat Server Development Version
base: core18
version: 3.18.3
summary: An Open Source Slack Alternative
description: |
  Development builds of Rocket.Chat

grade: stable
confinement: strict

plugs:
  network:

apps:
  rocketchat-mongo:
    command: bin/mongod.service
    daemon: forking
    plugs: [network-bind]

  rocketchat-server:
    command: bin/rocketchat.service
    environment:
      XDG_DATA_HOME: $SNAP/usr/share
      FONTCONFIG_PATH: $SNAP/etc/fonts/config.d
      FONTCONFIG_FILE: $SNAP/etc/fonts/fonts.conf
      DEPLOY_METHOD: snap
      NODE_ENV: production
      BABEL_CACHE_DIR: /tmp
      ROOT_URL: http://localhost:3001
      Accounts_AvatarStorePath: $SNAP_COMMON/uploads
    daemon: simple
    after: [rocketchat-mongo]
    plugs:
      - network-bind
      - removable-media

  mongo:
    command: bin/mongo

  rocketchat-caddy:
    command: bin/caddy.service
    daemon: simple
    plugs: [network-bind]

  backupdb:
    command: bin/backupdb.sh
    environment:
      LC_ALL: C

  restoredb:
    command: bin/restoredb.sh
    environment:
      LC_ALL: C

hooks:
  install: { plugs: [network-bind] }

parts:
  mongo:
    plugin: mongodb
    version: '4.2'
    components:
      - shell
      - server
      - tools
    tools:
      - mongodump
      - mongorestore
    filesets:
      stage-fileset:
        - -etc
        - -lib/systemd
        - -usr/share
    stage: &stage
      - $stage-fileset

  rocketchat:
    plugin: dump
    source: https://cdn-download.rocket.chat/build/rocket.chat-$SNAPCRAFT_PROJECT_VERSION.tgz
    build-snaps:
      - node/12/stable
    stage-snaps:
      - node/12/stable
    build-packages:
      - build-essential
      - on arm64:
          - autoconf
          - automake
          - libtool
    override-build: |
      cd programs/server

      [ "$SNAP_ARCH" = "arm64" ] && rm npm/node_modules/sharp/vendor -rf
      NODE_ENV=production npm i --unsafe-perm

      snapcraftctl build
    filesets:
      stage-fileset:
        - -README
        - -README.md
        - -LICENSE
        # filesets are excluding hidden files
        # BUG - need to fix upstream
        # not a bug, design choice
        - .node_version.txt
        - '*'
    stage: *stage

  caddy:
    plugin: dump
    source:
      - on amd64: https://github.com/caddyserver/caddy/releases/download/v2.4.3/caddy_2.4.3_linux_amd64.tar.gz
      - on arm64: https://github.com/caddyserver/caddy/releases/download/v2.4.3/caddy_2.4.3_linux_arm64.tar.gz
    organize:
      caddy: bin/caddy
    filesets:
      stage-fileset:
        - -README.md
        - -LICENSE
    stage: *stage

  daemons:
    plugin: dump
    source: './daemons'
    organize:
      '*': 'bin/'

  commands:
    plugin: dump
    source: './commands'
    organize:
      '*': 'bin/'

  script-dependecies:
    plugin: nil
    stage-packages:
      # for hooks::configure::validate_url
      - dnsutils
      # for install::jq
      - jq

  migrations:
    plugin: dump
    source: ./migrations
    organize:
      '*': migrations/
